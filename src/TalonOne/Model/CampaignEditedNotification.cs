/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// A notification regarding a campaign which was edited.
    /// </summary>
    [DataContract]
    public partial class CampaignEditedNotification :  IEquatable<CampaignEditedNotification>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignEditedNotification" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CampaignEditedNotification() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignEditedNotification" /> class.
        /// </summary>
        /// <param name="campaign">campaign (required).</param>
        /// <param name="oldCampaign">oldCampaign (required).</param>
        public CampaignEditedNotification(Campaign campaign = default(Campaign), Campaign oldCampaign = default(Campaign))
        {
            // to ensure "campaign" is required (not null)
            this.Campaign = campaign ?? throw new ArgumentNullException("campaign is a required property for CampaignEditedNotification and cannot be null");
            // to ensure "oldCampaign" is required (not null)
            this.OldCampaign = oldCampaign ?? throw new ArgumentNullException("oldCampaign is a required property for CampaignEditedNotification and cannot be null");
        }
        
        /// <summary>
        /// Gets or Sets Campaign
        /// </summary>
        [DataMember(Name="campaign", EmitDefaultValue=false)]
        public Campaign Campaign { get; set; }

        /// <summary>
        /// Gets or Sets OldCampaign
        /// </summary>
        [DataMember(Name="oldCampaign", EmitDefaultValue=false)]
        public Campaign OldCampaign { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CampaignEditedNotification {\n");
            sb.Append("  Campaign: ").Append(Campaign).Append("\n");
            sb.Append("  OldCampaign: ").Append(OldCampaign).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CampaignEditedNotification);
        }

        /// <summary>
        /// Returns true if CampaignEditedNotification instances are equal
        /// </summary>
        /// <param name="input">Instance of CampaignEditedNotification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CampaignEditedNotification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Campaign == input.Campaign ||
                    (this.Campaign != null &&
                    this.Campaign.Equals(input.Campaign))
                ) && 
                (
                    this.OldCampaign == input.OldCampaign ||
                    (this.OldCampaign != null &&
                    this.OldCampaign.Equals(input.OldCampaign))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Campaign != null)
                    hashCode = hashCode * 59 + this.Campaign.GetHashCode();
                if (this.OldCampaign != null)
                    hashCode = hashCode * 59 + this.OldCampaign.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
