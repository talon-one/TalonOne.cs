/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * 
 * Contact: devs@talon.one
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// A campaign state described exactly as in the Campaign Manager.
    /// </summary>
    /// <value>A campaign state described exactly as in the Campaign Manager.</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum FrontendState
    {
        /// <summary>
        /// Enum Expired for value: expired
        /// </summary>
        [EnumMember(Value = "expired")]
        Expired = 1,

        /// <summary>
        /// Enum Scheduled for value: scheduled
        /// </summary>
        [EnumMember(Value = "scheduled")]
        Scheduled = 2,

        /// <summary>
        /// Enum Running for value: running
        /// </summary>
        [EnumMember(Value = "running")]
        Running = 3,

        /// <summary>
        /// Enum Draft for value: draft
        /// </summary>
        [EnumMember(Value = "draft")]
        Draft = 4,

        /// <summary>
        /// Enum Disabled for value: disabled
        /// </summary>
        [EnumMember(Value = "disabled")]
        Disabled = 5

    }

}
