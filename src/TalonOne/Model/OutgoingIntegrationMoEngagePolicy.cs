/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * 
 * Contact: devs@talon.one
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// OutgoingIntegrationMoEngagePolicy
    /// </summary>
    [DataContract]
    public partial class OutgoingIntegrationMoEngagePolicy :  IEquatable<OutgoingIntegrationMoEngagePolicy>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OutgoingIntegrationMoEngagePolicy" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OutgoingIntegrationMoEngagePolicy() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OutgoingIntegrationMoEngagePolicy" /> class.
        /// </summary>
        /// <param name="baseUrl">The base URL of your MoEngage deployment, containing the MoEngage data center number (represented by &#x60;0X&#x60;). (required).</param>
        /// <param name="appId">MoEngage APP ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview). (required).</param>
        /// <param name="dataApiId">MoEngage DATA API ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview). (required).</param>
        /// <param name="dataApiKey">MoEngage DATA API Key. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview). (required).</param>
        public OutgoingIntegrationMoEngagePolicy(string baseUrl = default(string), string appId = default(string), string dataApiId = default(string), string dataApiKey = default(string))
        {
            // to ensure "baseUrl" is required (not null)
            this.BaseUrl = baseUrl ?? throw new ArgumentNullException("baseUrl is a required property for OutgoingIntegrationMoEngagePolicy and cannot be null");
            // to ensure "appId" is required (not null)
            this.AppId = appId ?? throw new ArgumentNullException("appId is a required property for OutgoingIntegrationMoEngagePolicy and cannot be null");
            // to ensure "dataApiId" is required (not null)
            this.DataApiId = dataApiId ?? throw new ArgumentNullException("dataApiId is a required property for OutgoingIntegrationMoEngagePolicy and cannot be null");
            // to ensure "dataApiKey" is required (not null)
            this.DataApiKey = dataApiKey ?? throw new ArgumentNullException("dataApiKey is a required property for OutgoingIntegrationMoEngagePolicy and cannot be null");
        }
        
        /// <summary>
        /// The base URL of your MoEngage deployment, containing the MoEngage data center number (represented by &#x60;0X&#x60;).
        /// </summary>
        /// <value>The base URL of your MoEngage deployment, containing the MoEngage data center number (represented by &#x60;0X&#x60;).</value>
        [DataMember(Name="baseUrl", EmitDefaultValue=false)]
        public string BaseUrl { get; set; }

        /// <summary>
        /// MoEngage APP ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).
        /// </summary>
        /// <value>MoEngage APP ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).</value>
        [DataMember(Name="appId", EmitDefaultValue=false)]
        public string AppId { get; set; }

        /// <summary>
        /// MoEngage DATA API ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).
        /// </summary>
        /// <value>MoEngage DATA API ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).</value>
        [DataMember(Name="dataApiId", EmitDefaultValue=false)]
        public string DataApiId { get; set; }

        /// <summary>
        /// MoEngage DATA API Key. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).
        /// </summary>
        /// <value>MoEngage DATA API Key. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).</value>
        [DataMember(Name="dataApiKey", EmitDefaultValue=false)]
        public string DataApiKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OutgoingIntegrationMoEngagePolicy {\n");
            sb.Append("  BaseUrl: ").Append(BaseUrl).Append("\n");
            sb.Append("  AppId: ").Append(AppId).Append("\n");
            sb.Append("  DataApiId: ").Append(DataApiId).Append("\n");
            sb.Append("  DataApiKey: ").Append(DataApiKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OutgoingIntegrationMoEngagePolicy);
        }

        /// <summary>
        /// Returns true if OutgoingIntegrationMoEngagePolicy instances are equal
        /// </summary>
        /// <param name="input">Instance of OutgoingIntegrationMoEngagePolicy to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OutgoingIntegrationMoEngagePolicy input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BaseUrl == input.BaseUrl ||
                    (this.BaseUrl != null &&
                    this.BaseUrl.Equals(input.BaseUrl))
                ) && 
                (
                    this.AppId == input.AppId ||
                    (this.AppId != null &&
                    this.AppId.Equals(input.AppId))
                ) && 
                (
                    this.DataApiId == input.DataApiId ||
                    (this.DataApiId != null &&
                    this.DataApiId.Equals(input.DataApiId))
                ) && 
                (
                    this.DataApiKey == input.DataApiKey ||
                    (this.DataApiKey != null &&
                    this.DataApiKey.Equals(input.DataApiKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BaseUrl != null)
                    hashCode = hashCode * 59 + this.BaseUrl.GetHashCode();
                if (this.AppId != null)
                    hashCode = hashCode * 59 + this.AppId.GetHashCode();
                if (this.DataApiId != null)
                    hashCode = hashCode * 59 + this.DataApiId.GetHashCode();
                if (this.DataApiKey != null)
                    hashCode = hashCode * 59 + this.DataApiKey.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
