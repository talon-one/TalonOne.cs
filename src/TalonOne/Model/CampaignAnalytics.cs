/* 
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation- -v1-customer_profiles- -integrationId- -put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// CampaignAnalytics
    /// </summary>
    [DataContract]
    public partial class CampaignAnalytics :  IEquatable<CampaignAnalytics>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignAnalytics" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CampaignAnalytics() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignAnalytics" /> class.
        /// </summary>
        /// <param name="date">date (required).</param>
        /// <param name="campaignRevenue">Amount of revenue in this campaign (for coupon or discount sessions). (required).</param>
        /// <param name="totalCampaignRevenue">Amount of revenue in this campaign since it began (for coupon or discount sessions). (required).</param>
        /// <param name="campaignRefund">Amount of refunds in this campaign (for coupon or discount sessions). (required).</param>
        /// <param name="totalCampaignRefund">Amount of refunds in this campaign since it began (for coupon or discount sessions). (required).</param>
        /// <param name="campaignDiscountCosts">Amount of cost caused by discounts given in the campaign. (required).</param>
        /// <param name="totalCampaignDiscountCosts">Amount of cost caused by discounts given in the campaign since it began. (required).</param>
        /// <param name="campaignRefundedDiscounts">Amount of discounts rolledback due to refund in the campaign. (required).</param>
        /// <param name="totalCampaignRefundedDiscounts">Amount of discounts rolledback due to refund in the campaign since it began. (required).</param>
        /// <param name="campaignFreeItems">Amount of free items given in the campaign. (required).</param>
        /// <param name="totalCampaignFreeItems">Amount of free items given in the campaign since it began. (required).</param>
        /// <param name="couponRedemptions">Number of coupon redemptions in the campaign. (required).</param>
        /// <param name="totalCouponRedemptions">Number of coupon redemptions in the campaign since it began. (required).</param>
        /// <param name="couponRolledbackRedemptions">Number of coupon redemptions that have been rolled back (due to canceling closed session) in the campaign. (required).</param>
        /// <param name="totalCouponRolledbackRedemptions">Number of coupon redemptions that have been rolled back (due to canceling closed session) in the campaign since it began. (required).</param>
        /// <param name="referralRedemptions">Number of referral redemptions in the campaign. (required).</param>
        /// <param name="totalReferralRedemptions">Number of referral redemptions in the campaign since it began. (required).</param>
        /// <param name="couponsCreated">Number of coupons created in the campaign by the rule engine. (required).</param>
        /// <param name="totalCouponsCreated">Number of coupons created in the campaign by the rule engine since it began. (required).</param>
        /// <param name="referralsCreated">Number of referrals created in the campaign by the rule engine. (required).</param>
        /// <param name="totalReferralsCreated">Number of referrals created in the campaign by the rule engine since it began. (required).</param>
        /// <param name="addedLoyaltyPoints">Number of added loyalty points in the campaign in a specific interval. (required).</param>
        /// <param name="totalAddedLoyaltyPoints">Number of added loyalty points in the campaign since it began. (required).</param>
        /// <param name="deductedLoyaltyPoints">Number of deducted loyalty points in the campaign in a specific interval. (required).</param>
        /// <param name="totalDeductedLoyaltyPoints">Number of deducted loyalty points in the campaign since it began. (required).</param>
        public CampaignAnalytics(DateTime date = default(DateTime), decimal campaignRevenue = default(decimal), decimal totalCampaignRevenue = default(decimal), decimal campaignRefund = default(decimal), decimal totalCampaignRefund = default(decimal), decimal campaignDiscountCosts = default(decimal), decimal totalCampaignDiscountCosts = default(decimal), decimal campaignRefundedDiscounts = default(decimal), decimal totalCampaignRefundedDiscounts = default(decimal), int campaignFreeItems = default(int), int totalCampaignFreeItems = default(int), int couponRedemptions = default(int), int totalCouponRedemptions = default(int), int couponRolledbackRedemptions = default(int), int totalCouponRolledbackRedemptions = default(int), int referralRedemptions = default(int), int totalReferralRedemptions = default(int), int couponsCreated = default(int), int totalCouponsCreated = default(int), int referralsCreated = default(int), int totalReferralsCreated = default(int), decimal addedLoyaltyPoints = default(decimal), decimal totalAddedLoyaltyPoints = default(decimal), decimal deductedLoyaltyPoints = default(decimal), decimal totalDeductedLoyaltyPoints = default(decimal))
        {
            this.Date = date;
            this.CampaignRevenue = campaignRevenue;
            this.TotalCampaignRevenue = totalCampaignRevenue;
            this.CampaignRefund = campaignRefund;
            this.TotalCampaignRefund = totalCampaignRefund;
            this.CampaignDiscountCosts = campaignDiscountCosts;
            this.TotalCampaignDiscountCosts = totalCampaignDiscountCosts;
            this.CampaignRefundedDiscounts = campaignRefundedDiscounts;
            this.TotalCampaignRefundedDiscounts = totalCampaignRefundedDiscounts;
            this.CampaignFreeItems = campaignFreeItems;
            this.TotalCampaignFreeItems = totalCampaignFreeItems;
            this.CouponRedemptions = couponRedemptions;
            this.TotalCouponRedemptions = totalCouponRedemptions;
            this.CouponRolledbackRedemptions = couponRolledbackRedemptions;
            this.TotalCouponRolledbackRedemptions = totalCouponRolledbackRedemptions;
            this.ReferralRedemptions = referralRedemptions;
            this.TotalReferralRedemptions = totalReferralRedemptions;
            this.CouponsCreated = couponsCreated;
            this.TotalCouponsCreated = totalCouponsCreated;
            this.ReferralsCreated = referralsCreated;
            this.TotalReferralsCreated = totalReferralsCreated;
            this.AddedLoyaltyPoints = addedLoyaltyPoints;
            this.TotalAddedLoyaltyPoints = totalAddedLoyaltyPoints;
            this.DeductedLoyaltyPoints = deductedLoyaltyPoints;
            this.TotalDeductedLoyaltyPoints = totalDeductedLoyaltyPoints;
        }
        
        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name="date", EmitDefaultValue=false)]
        public DateTime Date { get; set; }

        /// <summary>
        /// Amount of revenue in this campaign (for coupon or discount sessions).
        /// </summary>
        /// <value>Amount of revenue in this campaign (for coupon or discount sessions).</value>
        [DataMember(Name="campaignRevenue", EmitDefaultValue=false)]
        public decimal CampaignRevenue { get; set; }

        /// <summary>
        /// Amount of revenue in this campaign since it began (for coupon or discount sessions).
        /// </summary>
        /// <value>Amount of revenue in this campaign since it began (for coupon or discount sessions).</value>
        [DataMember(Name="totalCampaignRevenue", EmitDefaultValue=false)]
        public decimal TotalCampaignRevenue { get; set; }

        /// <summary>
        /// Amount of refunds in this campaign (for coupon or discount sessions).
        /// </summary>
        /// <value>Amount of refunds in this campaign (for coupon or discount sessions).</value>
        [DataMember(Name="campaignRefund", EmitDefaultValue=false)]
        public decimal CampaignRefund { get; set; }

        /// <summary>
        /// Amount of refunds in this campaign since it began (for coupon or discount sessions).
        /// </summary>
        /// <value>Amount of refunds in this campaign since it began (for coupon or discount sessions).</value>
        [DataMember(Name="totalCampaignRefund", EmitDefaultValue=false)]
        public decimal TotalCampaignRefund { get; set; }

        /// <summary>
        /// Amount of cost caused by discounts given in the campaign.
        /// </summary>
        /// <value>Amount of cost caused by discounts given in the campaign.</value>
        [DataMember(Name="campaignDiscountCosts", EmitDefaultValue=false)]
        public decimal CampaignDiscountCosts { get; set; }

        /// <summary>
        /// Amount of cost caused by discounts given in the campaign since it began.
        /// </summary>
        /// <value>Amount of cost caused by discounts given in the campaign since it began.</value>
        [DataMember(Name="totalCampaignDiscountCosts", EmitDefaultValue=false)]
        public decimal TotalCampaignDiscountCosts { get; set; }

        /// <summary>
        /// Amount of discounts rolledback due to refund in the campaign.
        /// </summary>
        /// <value>Amount of discounts rolledback due to refund in the campaign.</value>
        [DataMember(Name="campaignRefundedDiscounts", EmitDefaultValue=false)]
        public decimal CampaignRefundedDiscounts { get; set; }

        /// <summary>
        /// Amount of discounts rolledback due to refund in the campaign since it began.
        /// </summary>
        /// <value>Amount of discounts rolledback due to refund in the campaign since it began.</value>
        [DataMember(Name="totalCampaignRefundedDiscounts", EmitDefaultValue=false)]
        public decimal TotalCampaignRefundedDiscounts { get; set; }

        /// <summary>
        /// Amount of free items given in the campaign.
        /// </summary>
        /// <value>Amount of free items given in the campaign.</value>
        [DataMember(Name="campaignFreeItems", EmitDefaultValue=false)]
        public int CampaignFreeItems { get; set; }

        /// <summary>
        /// Amount of free items given in the campaign since it began.
        /// </summary>
        /// <value>Amount of free items given in the campaign since it began.</value>
        [DataMember(Name="totalCampaignFreeItems", EmitDefaultValue=false)]
        public int TotalCampaignFreeItems { get; set; }

        /// <summary>
        /// Number of coupon redemptions in the campaign.
        /// </summary>
        /// <value>Number of coupon redemptions in the campaign.</value>
        [DataMember(Name="couponRedemptions", EmitDefaultValue=false)]
        public int CouponRedemptions { get; set; }

        /// <summary>
        /// Number of coupon redemptions in the campaign since it began.
        /// </summary>
        /// <value>Number of coupon redemptions in the campaign since it began.</value>
        [DataMember(Name="totalCouponRedemptions", EmitDefaultValue=false)]
        public int TotalCouponRedemptions { get; set; }

        /// <summary>
        /// Number of coupon redemptions that have been rolled back (due to canceling closed session) in the campaign.
        /// </summary>
        /// <value>Number of coupon redemptions that have been rolled back (due to canceling closed session) in the campaign.</value>
        [DataMember(Name="couponRolledbackRedemptions", EmitDefaultValue=false)]
        public int CouponRolledbackRedemptions { get; set; }

        /// <summary>
        /// Number of coupon redemptions that have been rolled back (due to canceling closed session) in the campaign since it began.
        /// </summary>
        /// <value>Number of coupon redemptions that have been rolled back (due to canceling closed session) in the campaign since it began.</value>
        [DataMember(Name="totalCouponRolledbackRedemptions", EmitDefaultValue=false)]
        public int TotalCouponRolledbackRedemptions { get; set; }

        /// <summary>
        /// Number of referral redemptions in the campaign.
        /// </summary>
        /// <value>Number of referral redemptions in the campaign.</value>
        [DataMember(Name="referralRedemptions", EmitDefaultValue=false)]
        public int ReferralRedemptions { get; set; }

        /// <summary>
        /// Number of referral redemptions in the campaign since it began.
        /// </summary>
        /// <value>Number of referral redemptions in the campaign since it began.</value>
        [DataMember(Name="totalReferralRedemptions", EmitDefaultValue=false)]
        public int TotalReferralRedemptions { get; set; }

        /// <summary>
        /// Number of coupons created in the campaign by the rule engine.
        /// </summary>
        /// <value>Number of coupons created in the campaign by the rule engine.</value>
        [DataMember(Name="couponsCreated", EmitDefaultValue=false)]
        public int CouponsCreated { get; set; }

        /// <summary>
        /// Number of coupons created in the campaign by the rule engine since it began.
        /// </summary>
        /// <value>Number of coupons created in the campaign by the rule engine since it began.</value>
        [DataMember(Name="totalCouponsCreated", EmitDefaultValue=false)]
        public int TotalCouponsCreated { get; set; }

        /// <summary>
        /// Number of referrals created in the campaign by the rule engine.
        /// </summary>
        /// <value>Number of referrals created in the campaign by the rule engine.</value>
        [DataMember(Name="referralsCreated", EmitDefaultValue=false)]
        public int ReferralsCreated { get; set; }

        /// <summary>
        /// Number of referrals created in the campaign by the rule engine since it began.
        /// </summary>
        /// <value>Number of referrals created in the campaign by the rule engine since it began.</value>
        [DataMember(Name="totalReferralsCreated", EmitDefaultValue=false)]
        public int TotalReferralsCreated { get; set; }

        /// <summary>
        /// Number of added loyalty points in the campaign in a specific interval.
        /// </summary>
        /// <value>Number of added loyalty points in the campaign in a specific interval.</value>
        [DataMember(Name="addedLoyaltyPoints", EmitDefaultValue=false)]
        public decimal AddedLoyaltyPoints { get; set; }

        /// <summary>
        /// Number of added loyalty points in the campaign since it began.
        /// </summary>
        /// <value>Number of added loyalty points in the campaign since it began.</value>
        [DataMember(Name="totalAddedLoyaltyPoints", EmitDefaultValue=false)]
        public decimal TotalAddedLoyaltyPoints { get; set; }

        /// <summary>
        /// Number of deducted loyalty points in the campaign in a specific interval.
        /// </summary>
        /// <value>Number of deducted loyalty points in the campaign in a specific interval.</value>
        [DataMember(Name="deductedLoyaltyPoints", EmitDefaultValue=false)]
        public decimal DeductedLoyaltyPoints { get; set; }

        /// <summary>
        /// Number of deducted loyalty points in the campaign since it began.
        /// </summary>
        /// <value>Number of deducted loyalty points in the campaign since it began.</value>
        [DataMember(Name="totalDeductedLoyaltyPoints", EmitDefaultValue=false)]
        public decimal TotalDeductedLoyaltyPoints { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CampaignAnalytics {\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  CampaignRevenue: ").Append(CampaignRevenue).Append("\n");
            sb.Append("  TotalCampaignRevenue: ").Append(TotalCampaignRevenue).Append("\n");
            sb.Append("  CampaignRefund: ").Append(CampaignRefund).Append("\n");
            sb.Append("  TotalCampaignRefund: ").Append(TotalCampaignRefund).Append("\n");
            sb.Append("  CampaignDiscountCosts: ").Append(CampaignDiscountCosts).Append("\n");
            sb.Append("  TotalCampaignDiscountCosts: ").Append(TotalCampaignDiscountCosts).Append("\n");
            sb.Append("  CampaignRefundedDiscounts: ").Append(CampaignRefundedDiscounts).Append("\n");
            sb.Append("  TotalCampaignRefundedDiscounts: ").Append(TotalCampaignRefundedDiscounts).Append("\n");
            sb.Append("  CampaignFreeItems: ").Append(CampaignFreeItems).Append("\n");
            sb.Append("  TotalCampaignFreeItems: ").Append(TotalCampaignFreeItems).Append("\n");
            sb.Append("  CouponRedemptions: ").Append(CouponRedemptions).Append("\n");
            sb.Append("  TotalCouponRedemptions: ").Append(TotalCouponRedemptions).Append("\n");
            sb.Append("  CouponRolledbackRedemptions: ").Append(CouponRolledbackRedemptions).Append("\n");
            sb.Append("  TotalCouponRolledbackRedemptions: ").Append(TotalCouponRolledbackRedemptions).Append("\n");
            sb.Append("  ReferralRedemptions: ").Append(ReferralRedemptions).Append("\n");
            sb.Append("  TotalReferralRedemptions: ").Append(TotalReferralRedemptions).Append("\n");
            sb.Append("  CouponsCreated: ").Append(CouponsCreated).Append("\n");
            sb.Append("  TotalCouponsCreated: ").Append(TotalCouponsCreated).Append("\n");
            sb.Append("  ReferralsCreated: ").Append(ReferralsCreated).Append("\n");
            sb.Append("  TotalReferralsCreated: ").Append(TotalReferralsCreated).Append("\n");
            sb.Append("  AddedLoyaltyPoints: ").Append(AddedLoyaltyPoints).Append("\n");
            sb.Append("  TotalAddedLoyaltyPoints: ").Append(TotalAddedLoyaltyPoints).Append("\n");
            sb.Append("  DeductedLoyaltyPoints: ").Append(DeductedLoyaltyPoints).Append("\n");
            sb.Append("  TotalDeductedLoyaltyPoints: ").Append(TotalDeductedLoyaltyPoints).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CampaignAnalytics);
        }

        /// <summary>
        /// Returns true if CampaignAnalytics instances are equal
        /// </summary>
        /// <param name="input">Instance of CampaignAnalytics to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CampaignAnalytics input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.CampaignRevenue == input.CampaignRevenue ||
                    this.CampaignRevenue.Equals(input.CampaignRevenue)
                ) && 
                (
                    this.TotalCampaignRevenue == input.TotalCampaignRevenue ||
                    this.TotalCampaignRevenue.Equals(input.TotalCampaignRevenue)
                ) && 
                (
                    this.CampaignRefund == input.CampaignRefund ||
                    this.CampaignRefund.Equals(input.CampaignRefund)
                ) && 
                (
                    this.TotalCampaignRefund == input.TotalCampaignRefund ||
                    this.TotalCampaignRefund.Equals(input.TotalCampaignRefund)
                ) && 
                (
                    this.CampaignDiscountCosts == input.CampaignDiscountCosts ||
                    this.CampaignDiscountCosts.Equals(input.CampaignDiscountCosts)
                ) && 
                (
                    this.TotalCampaignDiscountCosts == input.TotalCampaignDiscountCosts ||
                    this.TotalCampaignDiscountCosts.Equals(input.TotalCampaignDiscountCosts)
                ) && 
                (
                    this.CampaignRefundedDiscounts == input.CampaignRefundedDiscounts ||
                    this.CampaignRefundedDiscounts.Equals(input.CampaignRefundedDiscounts)
                ) && 
                (
                    this.TotalCampaignRefundedDiscounts == input.TotalCampaignRefundedDiscounts ||
                    this.TotalCampaignRefundedDiscounts.Equals(input.TotalCampaignRefundedDiscounts)
                ) && 
                (
                    this.CampaignFreeItems == input.CampaignFreeItems ||
                    this.CampaignFreeItems.Equals(input.CampaignFreeItems)
                ) && 
                (
                    this.TotalCampaignFreeItems == input.TotalCampaignFreeItems ||
                    this.TotalCampaignFreeItems.Equals(input.TotalCampaignFreeItems)
                ) && 
                (
                    this.CouponRedemptions == input.CouponRedemptions ||
                    this.CouponRedemptions.Equals(input.CouponRedemptions)
                ) && 
                (
                    this.TotalCouponRedemptions == input.TotalCouponRedemptions ||
                    this.TotalCouponRedemptions.Equals(input.TotalCouponRedemptions)
                ) && 
                (
                    this.CouponRolledbackRedemptions == input.CouponRolledbackRedemptions ||
                    this.CouponRolledbackRedemptions.Equals(input.CouponRolledbackRedemptions)
                ) && 
                (
                    this.TotalCouponRolledbackRedemptions == input.TotalCouponRolledbackRedemptions ||
                    this.TotalCouponRolledbackRedemptions.Equals(input.TotalCouponRolledbackRedemptions)
                ) && 
                (
                    this.ReferralRedemptions == input.ReferralRedemptions ||
                    this.ReferralRedemptions.Equals(input.ReferralRedemptions)
                ) && 
                (
                    this.TotalReferralRedemptions == input.TotalReferralRedemptions ||
                    this.TotalReferralRedemptions.Equals(input.TotalReferralRedemptions)
                ) && 
                (
                    this.CouponsCreated == input.CouponsCreated ||
                    this.CouponsCreated.Equals(input.CouponsCreated)
                ) && 
                (
                    this.TotalCouponsCreated == input.TotalCouponsCreated ||
                    this.TotalCouponsCreated.Equals(input.TotalCouponsCreated)
                ) && 
                (
                    this.ReferralsCreated == input.ReferralsCreated ||
                    this.ReferralsCreated.Equals(input.ReferralsCreated)
                ) && 
                (
                    this.TotalReferralsCreated == input.TotalReferralsCreated ||
                    this.TotalReferralsCreated.Equals(input.TotalReferralsCreated)
                ) && 
                (
                    this.AddedLoyaltyPoints == input.AddedLoyaltyPoints ||
                    this.AddedLoyaltyPoints.Equals(input.AddedLoyaltyPoints)
                ) && 
                (
                    this.TotalAddedLoyaltyPoints == input.TotalAddedLoyaltyPoints ||
                    this.TotalAddedLoyaltyPoints.Equals(input.TotalAddedLoyaltyPoints)
                ) && 
                (
                    this.DeductedLoyaltyPoints == input.DeductedLoyaltyPoints ||
                    this.DeductedLoyaltyPoints.Equals(input.DeductedLoyaltyPoints)
                ) && 
                (
                    this.TotalDeductedLoyaltyPoints == input.TotalDeductedLoyaltyPoints ||
                    this.TotalDeductedLoyaltyPoints.Equals(input.TotalDeductedLoyaltyPoints)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                hashCode = hashCode * 59 + this.CampaignRevenue.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCampaignRevenue.GetHashCode();
                hashCode = hashCode * 59 + this.CampaignRefund.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCampaignRefund.GetHashCode();
                hashCode = hashCode * 59 + this.CampaignDiscountCosts.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCampaignDiscountCosts.GetHashCode();
                hashCode = hashCode * 59 + this.CampaignRefundedDiscounts.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCampaignRefundedDiscounts.GetHashCode();
                hashCode = hashCode * 59 + this.CampaignFreeItems.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCampaignFreeItems.GetHashCode();
                hashCode = hashCode * 59 + this.CouponRedemptions.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCouponRedemptions.GetHashCode();
                hashCode = hashCode * 59 + this.CouponRolledbackRedemptions.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCouponRolledbackRedemptions.GetHashCode();
                hashCode = hashCode * 59 + this.ReferralRedemptions.GetHashCode();
                hashCode = hashCode * 59 + this.TotalReferralRedemptions.GetHashCode();
                hashCode = hashCode * 59 + this.CouponsCreated.GetHashCode();
                hashCode = hashCode * 59 + this.TotalCouponsCreated.GetHashCode();
                hashCode = hashCode * 59 + this.ReferralsCreated.GetHashCode();
                hashCode = hashCode * 59 + this.TotalReferralsCreated.GetHashCode();
                hashCode = hashCode * 59 + this.AddedLoyaltyPoints.GetHashCode();
                hashCode = hashCode * 59 + this.TotalAddedLoyaltyPoints.GetHashCode();
                hashCode = hashCode * 59 + this.DeductedLoyaltyPoints.GetHashCode();
                hashCode = hashCode * 59 + this.TotalDeductedLoyaltyPoints.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
