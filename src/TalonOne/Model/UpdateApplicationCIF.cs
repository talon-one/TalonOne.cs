/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * 
 * Contact: devs@talon.one
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// UpdateApplicationCIF
    /// </summary>
    [DataContract]
    public partial class UpdateApplicationCIF :  IEquatable<UpdateApplicationCIF>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateApplicationCIF" /> class.
        /// </summary>
        /// <param name="description">A short description of the Application cart item filter..</param>
        /// <param name="activeExpressionId">The ID of the expression that the Application cart item filter uses..</param>
        /// <param name="modifiedBy">The ID of the user who last updated the Application cart item filter..</param>
        /// <param name="modified">Timestamp of the most recent update to the Application cart item filter..</param>
        public UpdateApplicationCIF(string description = default(string), int activeExpressionId = default(int), int modifiedBy = default(int), DateTime modified = default(DateTime))
        {
            this.Description = description;
            this.ActiveExpressionId = activeExpressionId;
            this.ModifiedBy = modifiedBy;
            this.Modified = modified;
        }
        
        /// <summary>
        /// A short description of the Application cart item filter.
        /// </summary>
        /// <value>A short description of the Application cart item filter.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// The ID of the expression that the Application cart item filter uses.
        /// </summary>
        /// <value>The ID of the expression that the Application cart item filter uses.</value>
        [DataMember(Name="activeExpressionId", EmitDefaultValue=false)]
        public int ActiveExpressionId { get; set; }

        /// <summary>
        /// The ID of the user who last updated the Application cart item filter.
        /// </summary>
        /// <value>The ID of the user who last updated the Application cart item filter.</value>
        [DataMember(Name="modifiedBy", EmitDefaultValue=false)]
        public int ModifiedBy { get; set; }

        /// <summary>
        /// Timestamp of the most recent update to the Application cart item filter.
        /// </summary>
        /// <value>Timestamp of the most recent update to the Application cart item filter.</value>
        [DataMember(Name="modified", EmitDefaultValue=false)]
        public DateTime Modified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateApplicationCIF {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ActiveExpressionId: ").Append(ActiveExpressionId).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  Modified: ").Append(Modified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateApplicationCIF);
        }

        /// <summary>
        /// Returns true if UpdateApplicationCIF instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateApplicationCIF to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateApplicationCIF input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ActiveExpressionId == input.ActiveExpressionId ||
                    this.ActiveExpressionId.Equals(input.ActiveExpressionId)
                ) && 
                (
                    this.ModifiedBy == input.ModifiedBy ||
                    this.ModifiedBy.Equals(input.ModifiedBy)
                ) && 
                (
                    this.Modified == input.Modified ||
                    (this.Modified != null &&
                    this.Modified.Equals(input.Modified))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                hashCode = hashCode * 59 + this.ActiveExpressionId.GetHashCode();
                hashCode = hashCode * 59 + this.ModifiedBy.GetHashCode();
                if (this.Modified != null)
                    hashCode = hashCode * 59 + this.Modified.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
