/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// The body of a return integration API request. Next to the cart items details, this contains an optional listing of extra properties that should be returned in the response.
    /// </summary>
    [DataContract]
    public partial class ReturnIntegrationRequest :  IEquatable<ReturnIntegrationRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines ResponseContent
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResponseContentEnum
        {
            /// <summary>
            /// Enum CustomerSession for value: customerSession
            /// </summary>
            [EnumMember(Value = "customerSession")]
            CustomerSession = 1,

            /// <summary>
            /// Enum CustomerProfile for value: customerProfile
            /// </summary>
            [EnumMember(Value = "customerProfile")]
            CustomerProfile = 2,

            /// <summary>
            /// Enum Coupons for value: coupons
            /// </summary>
            [EnumMember(Value = "coupons")]
            Coupons = 3,

            /// <summary>
            /// Enum TriggeredCampaigns for value: triggeredCampaigns
            /// </summary>
            [EnumMember(Value = "triggeredCampaigns")]
            TriggeredCampaigns = 4,

            /// <summary>
            /// Enum Referral for value: referral
            /// </summary>
            [EnumMember(Value = "referral")]
            Referral = 5,

            /// <summary>
            /// Enum Loyalty for value: loyalty
            /// </summary>
            [EnumMember(Value = "loyalty")]
            Loyalty = 6,

            /// <summary>
            /// Enum Event for value: event
            /// </summary>
            [EnumMember(Value = "event")]
            Event = 7,

            /// <summary>
            /// Enum PreviousReturns for value: previousReturns
            /// </summary>
            [EnumMember(Value = "previousReturns")]
            PreviousReturns = 8

        }


        /// <summary>
        /// Optional list of requested information to be present on the response related to the return request. 
        /// </summary>
        /// <value>Optional list of requested information to be present on the response related to the return request. </value>
        [DataMember(Name="responseContent", EmitDefaultValue=false)]
        public List<ResponseContentEnum> ResponseContent { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnIntegrationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReturnIntegrationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnIntegrationRequest" /> class.
        /// </summary>
        /// <param name="_return">_return (required).</param>
        /// <param name="responseContent">Optional list of requested information to be present on the response related to the return request. .</param>
        public ReturnIntegrationRequest(NewReturn _return = default(NewReturn), List<ResponseContentEnum> responseContent = default(List<ResponseContentEnum>))
        {
            // to ensure "_return" is required (not null)
            this.Return = _return ?? throw new ArgumentNullException("_return is a required property for ReturnIntegrationRequest and cannot be null");
            this.ResponseContent = responseContent;
        }
        
        /// <summary>
        /// Gets or Sets Return
        /// </summary>
        [DataMember(Name="return", EmitDefaultValue=false)]
        public NewReturn Return { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReturnIntegrationRequest {\n");
            sb.Append("  Return: ").Append(Return).Append("\n");
            sb.Append("  ResponseContent: ").Append(ResponseContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ReturnIntegrationRequest);
        }

        /// <summary>
        /// Returns true if ReturnIntegrationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ReturnIntegrationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReturnIntegrationRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Return == input.Return ||
                    (this.Return != null &&
                    this.Return.Equals(input.Return))
                ) && 
                (
                    this.ResponseContent == input.ResponseContent ||
                    this.ResponseContent.SequenceEqual(input.ResponseContent)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Return != null)
                    hashCode = hashCode * 59 + this.Return.GetHashCode();
                hashCode = hashCode * 59 + this.ResponseContent.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
