/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * 
 * Contact: devs@talon.one
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TalonOne.Api;
using TalonOne.Model;
using TalonOne.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TalonOne.Test
{
    /// <summary>
    ///  Class for testing LoyaltyProgram
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LoyaltyProgramTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for LoyaltyProgram
        //private LoyaltyProgram instance;

        public LoyaltyProgramTests()
        {
            // TODO uncomment below to create an instance of LoyaltyProgram
            //instance = new LoyaltyProgram();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LoyaltyProgram
        /// </summary>
        [Fact]
        public void LoyaltyProgramInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" LoyaltyProgram
            //Assert.IsInstanceOfType<LoyaltyProgram> (instance, "variable 'instance' is a LoyaltyProgram");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'SubscribedApplications'
        /// </summary>
        [Fact]
        public void SubscribedApplicationsTest()
        {
            // TODO unit test for the property 'SubscribedApplications'
        }
        /// <summary>
        /// Test the property 'DefaultValidity'
        /// </summary>
        [Fact]
        public void DefaultValidityTest()
        {
            // TODO unit test for the property 'DefaultValidity'
        }
        /// <summary>
        /// Test the property 'DefaultPending'
        /// </summary>
        [Fact]
        public void DefaultPendingTest()
        {
            // TODO unit test for the property 'DefaultPending'
        }
        /// <summary>
        /// Test the property 'AllowSubledger'
        /// </summary>
        [Fact]
        public void AllowSubledgerTest()
        {
            // TODO unit test for the property 'AllowSubledger'
        }
        /// <summary>
        /// Test the property 'UsersPerCardLimit'
        /// </summary>
        [Fact]
        public void UsersPerCardLimitTest()
        {
            // TODO unit test for the property 'UsersPerCardLimit'
        }
        /// <summary>
        /// Test the property 'Sandbox'
        /// </summary>
        [Fact]
        public void SandboxTest()
        {
            // TODO unit test for the property 'Sandbox'
        }
        /// <summary>
        /// Test the property 'ProgramJoinPolicy'
        /// </summary>
        [Fact]
        public void ProgramJoinPolicyTest()
        {
            // TODO unit test for the property 'ProgramJoinPolicy'
        }
        /// <summary>
        /// Test the property 'TiersExpirationPolicy'
        /// </summary>
        [Fact]
        public void TiersExpirationPolicyTest()
        {
            // TODO unit test for the property 'TiersExpirationPolicy'
        }
        /// <summary>
        /// Test the property 'TierCycleStartDate'
        /// </summary>
        [Fact]
        public void TierCycleStartDateTest()
        {
            // TODO unit test for the property 'TierCycleStartDate'
        }
        /// <summary>
        /// Test the property 'TiersExpireIn'
        /// </summary>
        [Fact]
        public void TiersExpireInTest()
        {
            // TODO unit test for the property 'TiersExpireIn'
        }
        /// <summary>
        /// Test the property 'TiersDowngradePolicy'
        /// </summary>
        [Fact]
        public void TiersDowngradePolicyTest()
        {
            // TODO unit test for the property 'TiersDowngradePolicy'
        }
        /// <summary>
        /// Test the property 'CardCodeSettings'
        /// </summary>
        [Fact]
        public void CardCodeSettingsTest()
        {
            // TODO unit test for the property 'CardCodeSettings'
        }
        /// <summary>
        /// Test the property 'AccountID'
        /// </summary>
        [Fact]
        public void AccountIDTest()
        {
            // TODO unit test for the property 'AccountID'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Tiers'
        /// </summary>
        [Fact]
        public void TiersTest()
        {
            // TODO unit test for the property 'Tiers'
        }
        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Fact]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }
        /// <summary>
        /// Test the property 'CardBased'
        /// </summary>
        [Fact]
        public void CardBasedTest()
        {
            // TODO unit test for the property 'CardBased'
        }
        /// <summary>
        /// Test the property 'CanUpdateTiers'
        /// </summary>
        [Fact]
        public void CanUpdateTiersTest()
        {
            // TODO unit test for the property 'CanUpdateTiers'
        }
        /// <summary>
        /// Test the property 'CanUpdateJoinPolicy'
        /// </summary>
        [Fact]
        public void CanUpdateJoinPolicyTest()
        {
            // TODO unit test for the property 'CanUpdateJoinPolicy'
        }
        /// <summary>
        /// Test the property 'CanUpdateTierExpirationPolicy'
        /// </summary>
        [Fact]
        public void CanUpdateTierExpirationPolicyTest()
        {
            // TODO unit test for the property 'CanUpdateTierExpirationPolicy'
        }
        /// <summary>
        /// Test the property 'CanUpgradeToAdvancedTiers'
        /// </summary>
        [Fact]
        public void CanUpgradeToAdvancedTiersTest()
        {
            // TODO unit test for the property 'CanUpgradeToAdvancedTiers'
        }
        /// <summary>
        /// Test the property 'CanUpdateSubledgers'
        /// </summary>
        [Fact]
        public void CanUpdateSubledgersTest()
        {
            // TODO unit test for the property 'CanUpdateSubledgers'
        }

    }

}
