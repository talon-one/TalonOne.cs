/* 
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * 
 * Contact: devs@talon.one
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TalonOne.Client.OpenAPIDateConverter;

namespace TalonOne.Model
{
    /// <summary>
    /// ApplicationCustomer
    /// </summary>
    [DataContract]
    public partial class ApplicationCustomer :  IEquatable<ApplicationCustomer>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationCustomer" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApplicationCustomer() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationCustomer" /> class.
        /// </summary>
        /// <param name="id">Internal ID of this entity. Internal ID of this entity. (required).</param>
        /// <param name="created">The time this entity was created. The time this entity was created. The time this entity was created. The time this entity was created. (required).</param>
        /// <param name="integrationId">The integration ID set by your integration layer. The integration ID set by your integration layer. (required).</param>
        /// <param name="attributes">Arbitrary properties associated with this item. (required).</param>
        /// <param name="accountId">The ID of the Talon.One account that owns this profile. The ID of the Talon.One account that owns this profile. (required).</param>
        /// <param name="closedSessions">The total amount of closed sessions by a customer. A closed session is a successful purchase. (required).</param>
        /// <param name="totalSales">The total amount of money spent by the customer **before** discounts are applied.  The total sales amount excludes the following: - Cancelled or reopened sessions. - Returned items.  (required).</param>
        /// <param name="loyaltyMemberships">**DEPRECATED** A list of loyalty programs joined by the customer. .</param>
        /// <param name="audienceMemberships">The audiences the customer belongs to..</param>
        /// <param name="lastActivity">Timestamp of the most recent event received from this customer. This field is updated on calls that trigger the rule-engine and that are not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).  For example, [reserving a coupon](https://docs.talon.one/integration-api#operation/createCouponReservation) for a customer doesn&#39;t impact this field.  (required).</param>
        /// <param name="sandbox">Shows whether the customer is part of a sandbox or live Application. See the [docs](https://docs.talon.one/docs/product/applications/overview#application-environments). .</param>
        /// <param name="advocateIntegrationId">The Integration ID of the Customer Profile that referred this Customer in the Application..</param>
        public ApplicationCustomer(int id = default(int), DateTime created = default(DateTime), string integrationId = default(string), Object attributes = default(Object), int accountId = default(int), int closedSessions = default(int), decimal totalSales = default(decimal), List<LoyaltyMembership> loyaltyMemberships = default(List<LoyaltyMembership>), List<AudienceMembership> audienceMemberships = default(List<AudienceMembership>), DateTime lastActivity = default(DateTime), bool sandbox = default(bool), string advocateIntegrationId = default(string))
        {
            this.Id = id;
            this.Created = created;
            // to ensure "integrationId" is required (not null)
            this.IntegrationId = integrationId ?? throw new ArgumentNullException("integrationId is a required property for ApplicationCustomer and cannot be null");
            // to ensure "attributes" is required (not null)
            this.Attributes = attributes ?? throw new ArgumentNullException("attributes is a required property for ApplicationCustomer and cannot be null");
            this.AccountId = accountId;
            this.ClosedSessions = closedSessions;
            this.TotalSales = totalSales;
            this.LastActivity = lastActivity;
            this.LoyaltyMemberships = loyaltyMemberships;
            this.AudienceMemberships = audienceMemberships;
            this.Sandbox = sandbox;
            this.AdvocateIntegrationId = advocateIntegrationId;
        }
        
        /// <summary>
        /// Internal ID of this entity. Internal ID of this entity.
        /// </summary>
        /// <value>Internal ID of this entity. Internal ID of this entity.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int Id { get; set; }

        /// <summary>
        /// The time this entity was created. The time this entity was created. The time this entity was created. The time this entity was created.
        /// </summary>
        /// <value>The time this entity was created. The time this entity was created. The time this entity was created. The time this entity was created.</value>
        [DataMember(Name="created", EmitDefaultValue=false)]
        public DateTime Created { get; set; }

        /// <summary>
        /// The integration ID set by your integration layer. The integration ID set by your integration layer.
        /// </summary>
        /// <value>The integration ID set by your integration layer. The integration ID set by your integration layer.</value>
        [DataMember(Name="integrationId", EmitDefaultValue=false)]
        public string IntegrationId { get; set; }

        /// <summary>
        /// Arbitrary properties associated with this item.
        /// </summary>
        /// <value>Arbitrary properties associated with this item.</value>
        [DataMember(Name="attributes", EmitDefaultValue=false)]
        public Object Attributes { get; set; }

        /// <summary>
        /// The ID of the Talon.One account that owns this profile. The ID of the Talon.One account that owns this profile.
        /// </summary>
        /// <value>The ID of the Talon.One account that owns this profile. The ID of the Talon.One account that owns this profile.</value>
        [DataMember(Name="accountId", EmitDefaultValue=false)]
        public int AccountId { get; set; }

        /// <summary>
        /// The total amount of closed sessions by a customer. A closed session is a successful purchase.
        /// </summary>
        /// <value>The total amount of closed sessions by a customer. A closed session is a successful purchase.</value>
        [DataMember(Name="closedSessions", EmitDefaultValue=false)]
        public int ClosedSessions { get; set; }

        /// <summary>
        /// The total amount of money spent by the customer **before** discounts are applied.  The total sales amount excludes the following: - Cancelled or reopened sessions. - Returned items. 
        /// </summary>
        /// <value>The total amount of money spent by the customer **before** discounts are applied.  The total sales amount excludes the following: - Cancelled or reopened sessions. - Returned items. </value>
        [DataMember(Name="totalSales", EmitDefaultValue=false)]
        public decimal TotalSales { get; set; }

        /// <summary>
        /// **DEPRECATED** A list of loyalty programs joined by the customer. 
        /// </summary>
        /// <value>**DEPRECATED** A list of loyalty programs joined by the customer. </value>
        [DataMember(Name="loyaltyMemberships", EmitDefaultValue=false)]
        public List<LoyaltyMembership> LoyaltyMemberships { get; set; }

        /// <summary>
        /// The audiences the customer belongs to.
        /// </summary>
        /// <value>The audiences the customer belongs to.</value>
        [DataMember(Name="audienceMemberships", EmitDefaultValue=false)]
        public List<AudienceMembership> AudienceMemberships { get; set; }

        /// <summary>
        /// Timestamp of the most recent event received from this customer. This field is updated on calls that trigger the rule-engine and that are not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).  For example, [reserving a coupon](https://docs.talon.one/integration-api#operation/createCouponReservation) for a customer doesn&#39;t impact this field. 
        /// </summary>
        /// <value>Timestamp of the most recent event received from this customer. This field is updated on calls that trigger the rule-engine and that are not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).  For example, [reserving a coupon](https://docs.talon.one/integration-api#operation/createCouponReservation) for a customer doesn&#39;t impact this field. </value>
        [DataMember(Name="lastActivity", EmitDefaultValue=false)]
        public DateTime LastActivity { get; set; }

        /// <summary>
        /// Shows whether the customer is part of a sandbox or live Application. See the [docs](https://docs.talon.one/docs/product/applications/overview#application-environments). 
        /// </summary>
        /// <value>Shows whether the customer is part of a sandbox or live Application. See the [docs](https://docs.talon.one/docs/product/applications/overview#application-environments). </value>
        [DataMember(Name="sandbox", EmitDefaultValue=false)]
        public bool Sandbox { get; set; }

        /// <summary>
        /// The Integration ID of the Customer Profile that referred this Customer in the Application.
        /// </summary>
        /// <value>The Integration ID of the Customer Profile that referred this Customer in the Application.</value>
        [DataMember(Name="advocateIntegrationId", EmitDefaultValue=false)]
        public string AdvocateIntegrationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplicationCustomer {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  IntegrationId: ").Append(IntegrationId).Append("\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  ClosedSessions: ").Append(ClosedSessions).Append("\n");
            sb.Append("  TotalSales: ").Append(TotalSales).Append("\n");
            sb.Append("  LoyaltyMemberships: ").Append(LoyaltyMemberships).Append("\n");
            sb.Append("  AudienceMemberships: ").Append(AudienceMemberships).Append("\n");
            sb.Append("  LastActivity: ").Append(LastActivity).Append("\n");
            sb.Append("  Sandbox: ").Append(Sandbox).Append("\n");
            sb.Append("  AdvocateIntegrationId: ").Append(AdvocateIntegrationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationCustomer);
        }

        /// <summary>
        /// Returns true if ApplicationCustomer instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationCustomer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationCustomer input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Created == input.Created ||
                    (this.Created != null &&
                    this.Created.Equals(input.Created))
                ) && 
                (
                    this.IntegrationId == input.IntegrationId ||
                    (this.IntegrationId != null &&
                    this.IntegrationId.Equals(input.IntegrationId))
                ) && 
                (
                    this.Attributes == input.Attributes ||
                    (this.Attributes != null &&
                    this.Attributes.Equals(input.Attributes))
                ) && 
                (
                    this.AccountId == input.AccountId ||
                    this.AccountId.Equals(input.AccountId)
                ) && 
                (
                    this.ClosedSessions == input.ClosedSessions ||
                    this.ClosedSessions.Equals(input.ClosedSessions)
                ) && 
                (
                    this.TotalSales == input.TotalSales ||
                    this.TotalSales.Equals(input.TotalSales)
                ) && 
                (
                    this.LoyaltyMemberships == input.LoyaltyMemberships ||
                    this.LoyaltyMemberships != null &&
                    input.LoyaltyMemberships != null &&
                    this.LoyaltyMemberships.SequenceEqual(input.LoyaltyMemberships)
                ) && 
                (
                    this.AudienceMemberships == input.AudienceMemberships ||
                    this.AudienceMemberships != null &&
                    input.AudienceMemberships != null &&
                    this.AudienceMemberships.SequenceEqual(input.AudienceMemberships)
                ) && 
                (
                    this.LastActivity == input.LastActivity ||
                    (this.LastActivity != null &&
                    this.LastActivity.Equals(input.LastActivity))
                ) && 
                (
                    this.Sandbox == input.Sandbox ||
                    this.Sandbox.Equals(input.Sandbox)
                ) && 
                (
                    this.AdvocateIntegrationId == input.AdvocateIntegrationId ||
                    (this.AdvocateIntegrationId != null &&
                    this.AdvocateIntegrationId.Equals(input.AdvocateIntegrationId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Created != null)
                    hashCode = hashCode * 59 + this.Created.GetHashCode();
                if (this.IntegrationId != null)
                    hashCode = hashCode * 59 + this.IntegrationId.GetHashCode();
                if (this.Attributes != null)
                    hashCode = hashCode * 59 + this.Attributes.GetHashCode();
                hashCode = hashCode * 59 + this.AccountId.GetHashCode();
                hashCode = hashCode * 59 + this.ClosedSessions.GetHashCode();
                hashCode = hashCode * 59 + this.TotalSales.GetHashCode();
                if (this.LoyaltyMemberships != null)
                    hashCode = hashCode * 59 + this.LoyaltyMemberships.GetHashCode();
                if (this.AudienceMemberships != null)
                    hashCode = hashCode * 59 + this.AudienceMemberships.GetHashCode();
                if (this.LastActivity != null)
                    hashCode = hashCode * 59 + this.LastActivity.GetHashCode();
                hashCode = hashCode * 59 + this.Sandbox.GetHashCode();
                if (this.AdvocateIntegrationId != null)
                    hashCode = hashCode * 59 + this.AdvocateIntegrationId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // IntegrationId (string) maxLength
            if(this.IntegrationId != null && this.IntegrationId.Length > 1000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IntegrationId, length must be less than 1000.", new [] { "IntegrationId" });
            }

            // AdvocateIntegrationId (string) maxLength
            if(this.AdvocateIntegrationId != null && this.AdvocateIntegrationId.Length > 1000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AdvocateIntegrationId, length must be less than 1000.", new [] { "AdvocateIntegrationId" });
            }

            yield break;
        }
    }

}
